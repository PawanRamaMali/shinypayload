[{"path":"https://pawanramamali.github.io/shinypayload/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Pawan Rama Mali. Author, maintainer.","code":""},{"path":"https://pawanramamali.github.io/shinypayload/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mali P (2025). shinypayload: Accept POST Data URL Parameters 'shiny' (-Port Integration). R package version 0.1.0, https://pawanramamali.github.io/shinypayload/, https://github.com/PawanRamaMali/shinypayload.","code":"@Manual{,   title = {shinypayload: Accept POST Data and URL Parameters in 'shiny' (Same-Port Integration)},   author = {Pawan Rama Mali},   year = {2025},   note = {R package version 0.1.0, https://pawanramamali.github.io/shinypayload/},   url = {https://github.com/PawanRamaMali/shinypayload}, }"},{"path":"https://pawanramamali.github.io/shinypayload/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to shinypayload","title":"Contributing to shinypayload","text":"love input! want make contributing shinypayload easy transparent possible, whether ‚Äôs: Reporting bug Discussing current state code Submitting fix Proposing new features Becoming maintainer","code":""},{"path":"https://pawanramamali.github.io/shinypayload/CONTRIBUTING.html","id":"rocket-quick-start","dir":"","previous_headings":"","what":"üöÄ Quick Start","title":"Contributing to shinypayload","text":"Fork repository Clone fork: git clone https://github.com/yourusername/shinypayload.git Install development dependencies: devtools::load_all() Create feature branch: git checkout -b feature/amazing-feature Make changes Test changes: devtools::test() Check package: devtools::check() Commit changes: git commit -m 'Add amazing feature' Push branch: git push origin feature/amazing-feature Open Pull Request","code":""},{"path":"https://pawanramamali.github.io/shinypayload/CONTRIBUTING.html","id":"bug-bug-reports","dir":"","previous_headings":"","what":"üêõ Bug Reports","title":"Contributing to shinypayload","text":"use GitHub issues track public bugs. Report bug opening new issue. Great Bug Reports tend : quick summary /background specific! Give sample code can expected happen actually happens Notes (possibly including think might happening, stuff tried didn‚Äôt work)","code":""},{"path":"https://pawanramamali.github.io/shinypayload/CONTRIBUTING.html","id":"bulb-feature-requests","dir":"","previous_headings":"","what":"üí° Feature Requests","title":"Contributing to shinypayload","text":"welcome feature requests! Please: Check existing issues avoid duplicates Describe problem ‚Äôre trying solve Describe solution ‚Äôd like see Consider alternatives ‚Äôve thought Provide examples used","code":""},{"path":"https://pawanramamali.github.io/shinypayload/CONTRIBUTING.html","id":"wrench-development-setup","dir":"","previous_headings":"","what":"üîß Development Setup","title":"Contributing to shinypayload","text":"","code":"# Install development dependencies install.packages(c(\"devtools\", \"testthat\", \"roxygen2\", \"styler\", \"lintr\"))  # Load the package devtools::load_all()  # Run tests devtools::test()  # Check package devtools::check()  # Generate documentation devtools::document()"},{"path":"https://pawanramamali.github.io/shinypayload/CONTRIBUTING.html","id":"pencil-code-style","dir":"","previous_headings":"","what":"üìù Code Style","title":"Contributing to shinypayload","text":"use automated code styling. submitting:","code":"# Style your code styler::style_pkg()  # Check for linting issues (optional) lintr::lint_package()"},{"path":"https://pawanramamali.github.io/shinypayload/CONTRIBUTING.html","id":"key-principles","dir":"","previous_headings":"üìù Code Style","what":"Key Principles","title":"Contributing to shinypayload","text":"consistent existing code Use meaningful names functions variables Write clear documentation roxygen2 Include tests new functionality Follow tidyverse style applicable","code":""},{"path":"https://pawanramamali.github.io/shinypayload/CONTRIBUTING.html","id":"test_tube-testing","dir":"","previous_headings":"","what":"üß™ Testing","title":"Contributing to shinypayload","text":"maintain high test coverage. adding features: Write tests first (TDD approach preferred) Test edge cases error conditions Use descriptive test names Group related tests contexts","code":"# Run all tests devtools::test()  # Run specific test file devtools::test(filter = \"payload\")  # Test with coverage covr::package_coverage()"},{"path":[]},{"path":"https://pawanramamali.github.io/shinypayload/CONTRIBUTING.html","id":"function-documentation","dir":"","previous_headings":"üìö Documentation","what":"Function Documentation","title":"Contributing to shinypayload","text":"Use roxygen2 exported functions:","code":"#' Brief description #' #' Longer description if needed #' #' @param param_name Description of parameter #' @return Description of return value #' @export #' @examples #' \\dontrun{ #' example_usage() #' } my_function <- function(param_name) {   # implementation }"},{"path":"https://pawanramamali.github.io/shinypayload/CONTRIBUTING.html","id":"examples","dir":"","previous_headings":"üìö Documentation","what":"Examples","title":"Contributing to shinypayload","text":"Include realistic examples Use \\dontrun{} examples requiring external services Ensure examples actually work Show common use cases","code":""},{"path":"https://pawanramamali.github.io/shinypayload/CONTRIBUTING.html","id":"vertical_traffic_light-pull-request-process","dir":"","previous_headings":"","what":"üö¶ Pull Request Process","title":"Contributing to shinypayload","text":"Update documentation new/changed functionality Add tests prove fix/feature works Ensure CI passes - tests, checks, style requirements Update NEWS.md change user-facing patient - maintainers review possible","code":""},{"path":"https://pawanramamali.github.io/shinypayload/CONTRIBUTING.html","id":"pr-checklist","dir":"","previous_headings":"üö¶ Pull Request Process","what":"PR Checklist","title":"Contributing to shinypayload","text":"Code follows existing style Tests added new functionality tests pass locally Documentation updated NEWS.md updated (applicable) CI checks pass","code":""},{"path":"https://pawanramamali.github.io/shinypayload/CONTRIBUTING.html","id":"label-versioning","dir":"","previous_headings":"","what":"üè∑Ô∏è Versioning","title":"Contributing to shinypayload","text":"use Semantic Versioning. versions available, see tags repository.","code":""},{"path":"https://pawanramamali.github.io/shinypayload/CONTRIBUTING.html","id":"page_facing_up-license","dir":"","previous_headings":"","what":"üìÑ License","title":"Contributing to shinypayload","text":"contributing, agree contributions licensed MIT License.","code":""},{"path":"https://pawanramamali.github.io/shinypayload/CONTRIBUTING.html","id":"handshake-code-of-conduct","dir":"","previous_headings":"","what":"ü§ù Code of Conduct","title":"Contributing to shinypayload","text":"project follows Contributor Covenant Code Conduct. participating, expected uphold code.","code":""},{"path":"https://pawanramamali.github.io/shinypayload/CONTRIBUTING.html","id":"our-standards","dir":"","previous_headings":"ü§ù Code of Conduct","what":"Our Standards","title":"Contributing to shinypayload","text":"welcoming newcomers respectful differing viewpoints Accept constructive criticism gracefully Focus community benefit Show empathy towards community members","code":""},{"path":"https://pawanramamali.github.io/shinypayload/CONTRIBUTING.html","id":"telephone_receiver-questions","dir":"","previous_headings":"","what":"üìû Questions?","title":"Contributing to shinypayload","text":"Don‚Äôt hesitate ask! can: Open issue bug reports feature requests Start discussion questions Email maintainer: prm@outlook.","code":""},{"path":"https://pawanramamali.github.io/shinypayload/CONTRIBUTING.html","id":"pray-recognition","dir":"","previous_headings":"","what":"üôè Recognition","title":"Contributing to shinypayload","text":"Contributors recognized : README.md acknowledgments NEWS.md release notes DESCRIPTION file (significant contributions) Thank making shinypayload better! üéâ","code":""},{"path":"https://pawanramamali.github.io/shinypayload/index.html","id":"shinypayload-","dir":"","previous_headings":"","what":"shinypayload ‚Ä¢ Accept POST Data in Shiny","title":"shinypayload ‚Ä¢ Accept POST Data in Shiny","text":"Bring data Shiny port üöÄ Seamlessly integrate POST requests query parameters existing Shiny apps reactive values. Zero configuration - works current UI port.","code":""},{"path":"https://pawanramamali.github.io/shinypayload/index.html","id":"sparkles-key-features","dir":"","previous_headings":"","what":"‚ú® Key Features","title":"shinypayload ‚Ä¢ Accept POST Data in Shiny","text":"üîå -port integration - need separate servers ports üì° RESTful API endpoints - Accept POST requests alongside Shiny UI üîÑ Reactive data streams - POST data automatically becomes reactive values üõ°Ô∏è Built-authentication - Token-based security endpoints üì± Multiple data formats - JSON, form data, query parameters üåê Cross-session sharing - Data shared across connected clients üö¶ Production ready - Comprehensive testing CRAN-quality code","code":""},{"path":[]},{"path":"https://pawanramamali.github.io/shinypayload/index.html","id":"installation","dir":"","previous_headings":"üöÄ Quick Start","what":"Installation","title":"shinypayload ‚Ä¢ Accept POST Data in Shiny","text":"","code":"# Install from CRAN install.packages(\"shinypayload\")  # Install development version from GitHub remotes::install_github(\"PawanRamaMali/shinypayload\")  # For local development devtools::load_all()"},{"path":"https://pawanramamali.github.io/shinypayload/index.html","id":"basic-example","dir":"","previous_headings":"üöÄ Quick Start","what":"Basic Example","title":"shinypayload ‚Ä¢ Accept POST Data in Shiny","text":"","code":"library(shiny) library(shinypayload)  # Your regular UI - no changes needed! base_ui <- fluidPage(   titlePanel(\"üöÄ shinypayload Demo\"),      fluidRow(     column(6,       h4(\"üìä Live Data\"),       verbatimTextOutput(\"live_data\")     ),     column(6,       h4(\"üîó URL Parameters\"),       verbatimTextOutput(\"url_params\")     )   ),      hr(),   h4(\"üì° POST Endpoint\"),   verbatimTextOutput(\"endpoint_info\") )  # Wrap your UI to handle POST requests ui <- payload_ui(   base_ui,   path = \"/api/data\",   token = Sys.getenv(\"API_TOKEN\", \"demo-token\") )  server <- function(input, output, session) {   # Get URL parameters   output$url_params <- renderPrint({     params <- params_get(session)     if (length(params) > 0) params else \"No URL parameters\"   })      # Show endpoint URL   output$endpoint_info <- renderText({     url <- payload_endpoint_url(session, \"/api/data\")     paste(\"Send POST requests to:\", url, \"?token=demo-token\")   })      # React to incoming POST data   live_data <- payload_last(\"/api/data\", session, intervalMillis = 200)      output$live_data <- renderPrint({     data <- live_data()     if (is.null(data)) {       \"Waiting for data... üì°\"     } else {       list(         timestamp = data$meta$timestamp,         payload = data$payload,         source = data$meta$remote_addr       )     }   }) }  # IMPORTANT: Use uiPattern = \".*\" for POST routing shinyApp(ui, server, uiPattern = \".*\")"},{"path":"https://pawanramamali.github.io/shinypayload/index.html","id":"send-data-to-your-app","dir":"","previous_headings":"üöÄ Quick Start","what":"Send Data to Your App","title":"shinypayload ‚Ä¢ Accept POST Data in Shiny","text":"","code":"# Send JSON data curl -X POST \"http://localhost:3838/api/data?token=demo-token\" \\\\   -H \"Content-Type: application/json\" \\\\   -d '{\"sensor\": \"temperature\", \"value\": 23.5, \"unit\": \"celsius\"}'  # Send form data   curl -X POST \"http://localhost:3838/api/data?token=demo-token\" \\\\   -d \"name=sensor01&status=active&reading=42\"  # Response: {\"ok\": true}"},{"path":[]},{"path":[]},{"path":"https://pawanramamali.github.io/shinypayload/index.html","id":"authentication-methods","dir":"","previous_headings":"üìñ Documentation","what":"Authentication Methods","title":"shinypayload ‚Ä¢ Accept POST Data in Shiny","text":"","code":"# Query parameter (recommended) POST /api/data?token=your-secret-token  # HTTP Headers POST /api/data X-Ingress-Token: your-secret-token # OR Authorization: your-secret-token"},{"path":"https://pawanramamali.github.io/shinypayload/index.html","id":"supported-content-types","dir":"","previous_headings":"üìñ Documentation","what":"Supported Content Types","title":"shinypayload ‚Ä¢ Accept POST Data in Shiny","text":"application/json - Parsed jsonlite::fromJSON() application/x-www-form-urlencoded - Parsed shiny::parseQueryString() Fallback: Attempts JSON parsing, returns raw text failed","code":""},{"path":[]},{"path":"https://pawanramamali.github.io/shinypayload/index.html","id":"bar_chart-real-time-dashboards","dir":"","previous_headings":"üí° Use Cases","what":"üìä Real-time Dashboards","title":"shinypayload ‚Ä¢ Accept POST Data in Shiny","text":"IoT sensor data streaming Live monitoring systems Real-time analytics","code":""},{"path":"https://pawanramamali.github.io/shinypayload/index.html","id":"robot-api-integration","dir":"","previous_headings":"üí° Use Cases","what":"ü§ñ API Integration","title":"shinypayload ‚Ä¢ Accept POST Data in Shiny","text":"Webhook receivers External service integration Microservice communication","code":""},{"path":"https://pawanramamali.github.io/shinypayload/index.html","id":"iphone-mobileweb-apps","dir":"","previous_headings":"üí° Use Cases","what":"üì± Mobile/Web Apps","title":"shinypayload ‚Ä¢ Accept POST Data in Shiny","text":"React/Vue.js ‚Üí Shiny data flow Progressive web apps Cross-platform integration","code":""},{"path":"https://pawanramamali.github.io/shinypayload/index.html","id":"arrows_counterclockwise-etl-pipelines","dir":"","previous_headings":"üí° Use Cases","what":"üîÑ ETL Pipelines","title":"shinypayload ‚Ä¢ Accept POST Data in Shiny","text":"Data ingestion endpoints Batch processing triggers Workflow automation","code":""},{"path":"https://pawanramamali.github.io/shinypayload/index.html","id":"open_file_folder-complete-examples","dir":"","previous_headings":"","what":"üìÇ Complete Examples","title":"shinypayload ‚Ä¢ Accept POST Data in Shiny","text":"Explore comprehensive examples inst/examples/: basic_example.R - Core functionality demo real_time_monitor.R - Live data monitoring form_handler.R - Form submission processing existing_app_integration.R - Add existing apps example includes ready--run code curl commands testing.","code":""},{"path":"https://pawanramamali.github.io/shinypayload/index.html","id":"shield-security-best-practices","dir":"","previous_headings":"","what":"üõ°Ô∏è Security Best Practices","title":"shinypayload ‚Ä¢ Accept POST Data in Shiny","text":"Always use tokens production Validate sanitize input data Use HTTPS production Implement rate limiting needed Monitor log API usage","code":"ui <- payload_ui(base_ui, \"/api\", Sys.getenv(\"API_SECRET\")) observeEvent(payload_last(\"/api\", session), {   data <- payload_last(\"/api\", session)()   if (!is.null(data)) {     # Validate required fields     if (is.null(data$payload$user_id)) return()     # Sanitize inputs before use     clean_data <- DBI::dbQuoteString(pool, data$payload$message)   } })"},{"path":[]},{"path":"https://pawanramamali.github.io/shinypayload/index.html","id":"multiple-endpoints","dir":"","previous_headings":"üîß Advanced Configuration","what":"Multiple Endpoints","title":"shinypayload ‚Ä¢ Accept POST Data in Shiny","text":"","code":"# Handle different data types on different paths ui <- payload_ui(base_ui, \"/sensors\", \"sensor-token\")  server <- function(input, output, session) {   # Different reactives for different endpoints   sensor_data <- payload_last(\"/sensors\", session)   user_data <- payload_last(\"/users\", session)      # Process accordingly... }"},{"path":"https://pawanramamali.github.io/shinypayload/index.html","id":"custom-polling-intervals","dir":"","previous_headings":"üîß Advanced Configuration","what":"Custom Polling Intervals","title":"shinypayload ‚Ä¢ Accept POST Data in Shiny","text":"","code":"# High-frequency updates (100ms) fast_data <- payload_last(\"/live\", session, intervalMillis = 100)  # Low-frequency updates (5 seconds)  slow_data <- payload_last(\"/batch\", session, intervalMillis = 5000)"},{"path":"https://pawanramamali.github.io/shinypayload/index.html","id":"handshake-contributing","dir":"","previous_headings":"","what":"ü§ù Contributing","title":"shinypayload ‚Ä¢ Accept POST Data in Shiny","text":"welcome contributions! Please see Contributing Guidelines details.","code":""},{"path":"https://pawanramamali.github.io/shinypayload/index.html","id":"development-setup","dir":"","previous_headings":"ü§ù Contributing","what":"Development Setup","title":"shinypayload ‚Ä¢ Accept POST Data in Shiny","text":"","code":"# Clone and install dependencies git clone https://github.com/PawanRamaMali/shinypayload.git cd shinypayload  # Install in development mode devtools::load_all()  # Run tests devtools::test()  # Check package devtools::check()"},{"path":"https://pawanramamali.github.io/shinypayload/index.html","id":"bar_chart-package-status","dir":"","previous_headings":"","what":"üìä Package Status","title":"shinypayload ‚Ä¢ Accept POST Data in Shiny","text":"‚úÖ 132 tests comprehensive coverage ‚úÖ Cross-platform compatibility (Windows, macOS, Linux) ‚úÖ Multiple R versions supported (R ‚â• 4.1) ‚úÖ CRAN ready - passes checks ‚úÖ Production tested - used real applications","code":""},{"path":"https://pawanramamali.github.io/shinypayload/index.html","id":"clipboard-requirements","dir":"","previous_headings":"","what":"üìã Requirements","title":"shinypayload ‚Ä¢ Accept POST Data in Shiny","text":"R ‚â• 4.1 shiny ‚â• 1.7.4 jsonlite (version)","code":""},{"path":"https://pawanramamali.github.io/shinypayload/index.html","id":"page_facing_up-license","dir":"","previous_headings":"","what":"üìÑ License","title":"shinypayload ‚Ä¢ Accept POST Data in Shiny","text":"project licensed MIT License - see LICENSE file details.","code":""},{"path":"https://pawanramamali.github.io/shinypayload/index.html","id":"pray-acknowledgments","dir":"","previous_headings":"","what":"üôè Acknowledgments","title":"shinypayload ‚Ä¢ Accept POST Data in Shiny","text":"Built amazing Shiny framework Inspired need seamless data integration web applications Thanks R community feedback contributions","code":""},{"path":"https://pawanramamali.github.io/shinypayload/index.html","id":"telephone_receiver-support","dir":"","previous_headings":"","what":"üìû Support","title":"shinypayload ‚Ä¢ Accept POST Data in Shiny","text":"üìñ Documentation: Package website üêõ Bug reports: GitHub Issues üí¨ Questions: GitHub Issues üìß Email: prm@outlook.Made ‚ù§Ô∏è R Shiny community ‚≠ê Star repo ‚Ä¢ üç¥ Fork ‚Ä¢ üì¢ Share ","code":""},{"path":"https://pawanramamali.github.io/shinypayload/reference/params_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Get URL query parameters in Shiny ‚Äî params_get","title":"Get URL query parameters in Shiny ‚Äî params_get","text":"Get URL query parameters Shiny","code":""},{"path":"https://pawanramamali.github.io/shinypayload/reference/params_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get URL query parameters in Shiny ‚Äî params_get","text":"","code":"params_get(session, keys = NULL)"},{"path":"https://pawanramamali.github.io/shinypayload/reference/params_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get URL query parameters in Shiny ‚Äî params_get","text":"session Shiny session keys Optional character vector keys pull; NULL return ","code":""},{"path":"https://pawanramamali.github.io/shinypayload/reference/params_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get URL query parameters in Shiny ‚Äî params_get","text":"named list containing URL query parameters. keys specified, parameters returned. parameters exist specified keys found, returns empty list list NULL values respectively.","code":""},{"path":"https://pawanramamali.github.io/shinypayload/reference/params_get.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get URL query parameters in Shiny ‚Äî params_get","text":"","code":"if (interactive()) { server <- function(input, output, session) {   # Get all query parameters   all_params <- params_get(session)    # Get specific parameters   user_params <- params_get(session, keys = c(\"user_id\", \"token\"))    # Use in outputs   output$params_display <- renderText({     params <- params_get(session)     if (length(params) > 0) {       paste(\"Parameters:\", jsonlite::toJSON(params))     } else {       \"No parameters provided\"     }   }) } }"},{"path":"https://pawanramamali.github.io/shinypayload/reference/payload_endpoint_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the absolute URL for the payload endpoint ‚Äî payload_endpoint_url","title":"Generate the absolute URL for the payload endpoint ‚Äî payload_endpoint_url","text":"Generate absolute URL payload endpoint","code":""},{"path":"https://pawanramamali.github.io/shinypayload/reference/payload_endpoint_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the absolute URL for the payload endpoint ‚Äî payload_endpoint_url","text":"","code":"payload_endpoint_url(session, path = \"/ingress\")"},{"path":"https://pawanramamali.github.io/shinypayload/reference/payload_endpoint_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the absolute URL for the payload endpoint ‚Äî payload_endpoint_url","text":"session Shiny session object path URL path (default \"/ingress\")","code":""},{"path":"https://pawanramamali.github.io/shinypayload/reference/payload_endpoint_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the absolute URL for the payload endpoint ‚Äî payload_endpoint_url","text":"character string containing complete URL (including protocol, hostname, port, path) POST requests sent reach endpoint.","code":""},{"path":"https://pawanramamali.github.io/shinypayload/reference/payload_endpoint_url.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate the absolute URL for the payload endpoint ‚Äî payload_endpoint_url","text":"","code":"if (interactive()) { server <- function(input, output, session) {   url <- payload_endpoint_url(session, \"/data\")   print(paste(\"Send POST requests to:\", url)) } }"},{"path":"https://pawanramamali.github.io/shinypayload/reference/payload_last.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a reactive that polls for new payload data ‚Äî payload_last","title":"Get a reactive that polls for new payload data ‚Äî payload_last","text":"Get reactive polls new payload data","code":""},{"path":"https://pawanramamali.github.io/shinypayload/reference/payload_last.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a reactive that polls for new payload data ‚Äî payload_last","text":"","code":"payload_last(path = \"/ingress\", session, intervalMillis = 300)"},{"path":"https://pawanramamali.github.io/shinypayload/reference/payload_last.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a reactive that polls for new payload data ‚Äî payload_last","text":"path URL path used payload_ui() (default \"/ingress\") session Shiny session object intervalMillis Polling interval milliseconds (default 300)","code":""},{"path":"https://pawanramamali.github.io/shinypayload/reference/payload_last.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a reactive that polls for new payload data ‚Äî payload_last","text":"reactive expression (class \"reactive\") returns list two elements new data available: payload (parsed request body) meta (metadata including timestamp, remote address, headers, etc.), NULL data received yet.","code":""},{"path":"https://pawanramamali.github.io/shinypayload/reference/payload_last.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a reactive that polls for new payload data ‚Äî payload_last","text":"","code":"if (interactive()) { server <- function(input, output, session) {   latest_data <- payload_last(\"/data\", session)    observeEvent(latest_data(), {     data <- latest_data()     if (!is.null(data)) {       print(data$payload)       print(data$meta$timestamp)     }   }) } }"},{"path":"https://pawanramamali.github.io/shinypayload/reference/payload_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrap an existing UI with an integrated POST handler on the same port ‚Äî payload_ui","title":"Wrap an existing UI with an integrated POST handler on the same port ‚Äî payload_ui","text":"Wrap existing UI integrated POST handler port","code":""},{"path":"https://pawanramamali.github.io/shinypayload/reference/payload_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrap an existing UI with an integrated POST handler on the same port ‚Äî payload_ui","text":"","code":"payload_ui(base_ui, path = \"/ingress\", token = NULL)"},{"path":"https://pawanramamali.github.io/shinypayload/reference/payload_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrap an existing UI with an integrated POST handler on the same port ‚Äî payload_ui","text":"base_ui original UI (tagList, fluidPage, function(req) returning UI) path URL path handle POST requests (default \"/ingress\") token Optional authentication token POST requests","code":""},{"path":"https://pawanramamali.github.io/shinypayload/reference/payload_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrap an existing UI with an integrated POST handler on the same port ‚Äî payload_ui","text":"function takes request object returns either regular UI (GET requests) HTTP response (POST requests). function passed shinyApp() ui parameter.","code":""},{"path":"https://pawanramamali.github.io/shinypayload/reference/payload_ui.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrap an existing UI with an integrated POST handler on the same port ‚Äî payload_ui","text":"","code":"if (interactive()) { ui <- payload_ui(   fluidPage(h1(\"My App\")),   path = \"/data\",   token = \"secret123\" ) shinyApp(ui, server, uiPattern = \".*\") }"},{"path":"https://pawanramamali.github.io/shinypayload/reference/setup_payload_endpoint.html","id":null,"dir":"Reference","previous_headings":"","what":"Setup POST endpoint in server function - MUST be called in server ‚Äî setup_payload_endpoint","title":"Setup POST endpoint in server function - MUST be called in server ‚Äî setup_payload_endpoint","text":"Setup POST endpoint server function - MUST called server","code":""},{"path":"https://pawanramamali.github.io/shinypayload/reference/setup_payload_endpoint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setup POST endpoint in server function - MUST be called in server ‚Äî setup_payload_endpoint","text":"","code":"setup_payload_endpoint(path = \"/ingress\", session, token = NULL)"},{"path":"https://pawanramamali.github.io/shinypayload/reference/setup_payload_endpoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setup POST endpoint in server function - MUST be called in server ‚Äî setup_payload_endpoint","text":"path URL path handle POST requests (default \"/ingress\") session Shiny session object token Optional authentication token POST requests","code":""},{"path":"https://pawanramamali.github.io/shinypayload/reference/setup_payload_endpoint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setup POST endpoint in server function - MUST be called in server ‚Äî setup_payload_endpoint","text":"return value, called side effects. Registers POST endpoint handler Shiny session process incoming requests.","code":""},{"path":"https://pawanramamali.github.io/shinypayload/news/index.html","id":"shinypayload-010","dir":"Changelog","previous_headings":"","what":"shinypayload 0.1.0","title":"shinypayload 0.1.0","text":"CRAN release: 2025-08-29","code":""},{"path":"https://pawanramamali.github.io/shinypayload/news/index.html","id":"new-features-0-1-0","dir":"Changelog","previous_headings":"","what":"New Features","title":"shinypayload 0.1.0","text":"Initial release shinypayload package üéâ -port POST handling - Accept POST requests port Shiny UI Reactive data integration - POST data automatically becomes reactive values Multiple authentication methods - Query parameters, headers, authorization tokens Multi-format support - JSON, form data, query parameters Cross-session data sharing - Data shared across connected clients","code":""},{"path":"https://pawanramamali.github.io/shinypayload/news/index.html","id":"core-functions-0-1-0","dir":"Changelog","previous_headings":"","what":"Core Functions","title":"shinypayload 0.1.0","text":"payload_ui() - Wrap Shiny UI handle POST requests payload_last() - Get reactive latest POST data params_get() - Extract URL query parameters payload_endpoint_url() - Generate absolute URLs endpoints","code":""},{"path":"https://pawanramamali.github.io/shinypayload/news/index.html","id":"documentation--examples-0-1-0","dir":"Changelog","previous_headings":"","what":"Documentation & Examples","title":"shinypayload 0.1.0","text":"Comprehensive README quick start guide Basic functionality demo Real-time data monitoring Form submission handling Integration existing apps Professional documentation roxygen2 Security best practices guide","code":""},{"path":"https://pawanramamali.github.io/shinypayload/news/index.html","id":"testing--quality-0-1-0","dir":"Changelog","previous_headings":"","what":"Testing & Quality","title":"shinypayload 0.1.0","text":"132 comprehensive tests high coverage GitHub Actions CI/CD across multiple platforms R versions CRAN-ready package - passes R CMD checks Professional code quality automated styling linting","code":""},{"path":"https://pawanramamali.github.io/shinypayload/news/index.html","id":"requirements-0-1-0","dir":"Changelog","previous_headings":"","what":"Requirements","title":"shinypayload 0.1.0","text":"R (>= 4.1) shiny (>= 1.7.4) jsonlite package enables seamless data integration external systems Shiny applications, making easier ever build reactive dashboards APIs Shiny.","code":""}]
